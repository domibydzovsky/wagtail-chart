apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "deployment.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "deployment.name" . }}
    helm.sh/chart: {{ include "deployment.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "deployment.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "deployment.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        {{- with .Values.deployment.labels }}
          {{- toYaml . | nindent 4 }}
        {{- end }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.pullSecret }}
      initContainers:
        {{- if .Values.persistence.chownVolume }}
        - name: {{ .Release.Name}}-permissions
          image: {{ .Values.utilsContainer.repository }}:{{ .Values.utilsContainer.tag }}
          imagePullPolicy: {{.Values.image.pullPolicy}}
          securityContext:
            privileged: true
            runAsUser: 0
            runAsGroup: 0
          command:
            - chown
            - -R
            - "1000"
            - /mnt/storage
          volumeMounts:
            - name: mediadir
              mountPath: /mnt/storage
        {{- end }}
        - name: {{ .Release.Name }}-db
          image: {{ .Values.utilsContainer.repository }}:{{ .Values.utilsContainer.tag }}
          imagePullPolicy: {{.Values.image.pullPolicy}}
          env:
          - name: DB_ACTIONS
            value: {{ .Values.dbActions }}
          {{- include "deployment.database" . | nindent 10 }}
          {{- include "deployment.superdatabase" . | nindent 10 }}
        - name: {{ .Release.Name }}-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: SECRET_KEY
            value: {{ .Values.secretKey }}
          - name: MODE
            value: setup
          - name: DJANGO_SETTINGS_MODULE
            value: mysite.settings.production
          {{- include "deployment.database" . | nindent 10 }}
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
{{/*        {{ toYaml .Values.securityContext | nindent 8 }}*/}}
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          env:
          {{- if .Values.google.trackingId }}
          - name: GOOGLE_TRACKING_ID
            value: {{ .Values.google.trackingId }}
          {{- end }}
          {{- if .Values.google.clientId }}
          - name: GOOGLE_CLIENT_ID
            value: {{ .Values.google.clientId }}
          {{- end }}
          {{- if .Values.google.recaptcha }}
          - name: GOOGLE_RECAPTCHA
            value: {{ .Values.google.recaptcha }}
          {{- end }}
          {{- if .Values.sitename }}
          - name: SITE_NAME
            value: {{ .Values.sitename }}
          {{- end }}
          {{- if .Values.ingress.enabled | and .Values.ingress.hosts }}
          - name: BASE_URL
            value: https://{{ .Values.ingress.hosts | first }}
          {{- end }}
          - name: DJANGO_SETTINGS_MODULE
            value: mysite.settings.production
          - name: SECRET_KEY
            value: "{{ required "You have to supply a secret key" .Values.secretKey }}"
          {{- include "deployment.database" . | nindent 10 }}
  {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: mediadir
              mountPath: /app/media
  {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
  {{- if .Values.persistence.enabled }}
      volumes:
      - name: mediadir
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-media
  {{- end }}
