replicaCount: 1
utilsContainer:
  repository: domibydzovsky/postgresutils
  tag: latest

dbActions: "CREATED_DATABASE"
pullSecret: regcred
image:
  repository: domibydzovsky/template
  tag: latest
  pullPolicy: Always

scheduleBackup:
  enabled: false
  cron: "0 0 * * *"

deployment:
  annotations: {}

secretKey: ""
nameOverride: "template"
fullnameOverride: ""

securityContext:
  runAsUser: 1000

dbenv:
  EXAMPLE: 1

google:
  trackingId: ""
  clientId: ""
  recaptcha: ""
  recaptchaSecret: ""

strategy: RollingUpdate # Recreate
probePath: /
healthProbeTimeout: 1
livenessProbeTimeout: 1

email:
  backend: "django.core.mail.backends.smtp.EmailBackend"
  host: "smtp.gmail.com"
  port: "587"
  user: ""
  password: ""

sitename: ""

service:
  type: ClusterIP
  port: 80

createIssuer: false
ingress:
  issuerName: "letsencrypt-issuer"
  enabled: true
  annotations: {}
  paths:
    - /
  hosts: []
  https:
    enabled: false
    email:
#    server: https://acme-staging-v02.api.letsencrypt.org/directory
    server: https://acme-v02.api.letsencrypt.org/directory
    secretName: tls-secret
#  tls:
#  - secretName: tls-secret
#    hosts:
#      - dbydzovsky.cz
resources:
   limits:
    memory: 200Mi
   requests:
    cpu: 50m
    memory: 200Mi
livenessProbe:
  initialDelaySeconds: 90
nodeSelector: {}

persistence:
  enabled: false
  chownVolume: false
  storageClass: ""
  capacity: 1Gi
db:
  engine: "django_zero_downtime_migrations.backends.postgres"
  name: "main"
  user:
  pass:
  host: "postgres-postgresql.postgres.svc.cluster.local"
  port: 5432
  superuser:
  superpass:
  superdb:

tolerations: []

affinity: {}
